% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read-spec-yaml.R
\name{read_spec_yaml}
\alias{read_spec_yaml}
\title{Read stories and requirements from YAML files}
\usage{
read_spec_yaml(stories, requirements = NULL)
}
\arguments{
\item{stories, requirements}{Character vector of YAML files to read stories
and requirements from.}
}
\value{
Tibble with columns as described by \code{mrgvalidate::input_formats}.
}
\description{
Convert a set of stories and optionally requirements from YAML files into a
data frame that is ready to be passed as the \code{specs} argument to
\code{mrgvalidate::create_validation_docs()}.
}
\details{
\subsection{Option 1: Stories and requirements}{

If you provide a value for both \code{stories} and \code{requirements}, the \code{stories}
argument should be one or more YAML files with the following structure:

\if{html}{\out{<div class="sourceCode">}}\preformatted{STORY-ID-001:
  name: Story name
  description: >
    Longer story description
  requirements:
  - REQ-ID-001
  - REQ-ID-002
  ProductRisk: risk
STORY-ID-002:
[...]
}\if{html}{\out{</div>}}

The \code{requirements} argument should be a set of YAML files that have entries
that link those requirements to tests:

\if{html}{\out{<div class="sourceCode">}}\preformatted{REQ-ID-001:
  description: >
    Description
  tests:
  - TEST-ID-001
  - TEST-ID-001
}\if{html}{\out{</div>}}

The information above is used to construct a data frame with the following
columns:
\itemize{
\item \code{StoryId} (character scalar)
\item \code{StoryName} (character scalar)
\item \code{StoryDescription} (character scalar)
\item \code{ProductRisk} (character scalar)
\item \code{RequirementIds} (character vector)
\item \code{RequirementDescription} (character scalar)
\item \code{TestIds} (character vector)
}
}

\subsection{Option 2: Stories linked directly to tests}{

If you provide only a \code{stories} argument, the YAML entries should specify a
list of tests rather than a set of requirements:

\if{html}{\out{<div class="sourceCode">}}\preformatted{STORY-ID-001:
  name: Story name
  description: >
    Longer story description
  tests:
  - TEST-ID-001
  - TEST-ID-002
  ProductRisk: risk
STORY-ID-002:
[...]
}\if{html}{\out{</div>}}

Those entries are used to construct a data frame with the following columns:
\itemize{
\item \code{StoryId} (character scalar)
\item \code{StoryName} (character scalar)
\item \code{StoryDescription} (character scalar)
\item \code{ProductRisk} (character scalar)
\item \code{TestIds} (character vector)
}
}
}
